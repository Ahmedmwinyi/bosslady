import { useRef } from "react";
import { useAuth } from "../contexts/AuthContext";
import { useApplications } from "../contexts/ApplicationContext";
import { useReactToPrint } from "react-to-print";
import {
  Download,
  FileText,
  Briefcase,
  PieChart,
  Clock,
  CheckCircle,
  XCircle,
} from "lucide-react";

export default function HRReports() {
  const { user } = useAuth();
  const { promotionRequests, loadingRequests } = useApplications();
  const reportRef = useRef<HTMLDivElement>(null);

  const handleDownloadPDF = useReactToPrint({
    content: () => reportRef.current,
    pageStyle: `
      @page {
        size: A4;
        margin: 20mm;
      }
      @media print {
        body {
          color: #000;
        }
        .print-hidden {
          display: none;
        }
        .print-section {
          page-break-after: always;
        }
        .print-section:last-child {
          page-break-after: auto;
        }
      }
    `,
  });

  const getApprovedApplications = () => {
    return promotionRequests.filter((app) => app.status === "APPROVED");
  };

  const getPendingProcessing = () => {
    return promotionRequests.filter(
      (app) => app.status === "APPROVED" && !app.hrProcessed
    );
  };

  const getStatsBySchool = () => {
    const stats: Record<string, { total: number; approved: number }> = {};

    promotionRequests.forEach((app) => {
      if (!stats[app.schoolName]) {
        stats[app.schoolName] = { total: 0, approved: 0 };
      }
      stats[app.schoolName].total++;
      if (app.status === "APPROVED") {
        stats[app.schoolName].approved++;
      }
    });

    return stats;
  };

  const schoolStats = getStatsBySchool();

  const getStatusText = (status: string) => {
    switch (status) {
      case "draft":
        return "Draft";
      case "submitted":
        return "Pending HOD Review";
      case "hod_reviewed":
        return "Pending Dean Review";
      case "dean_reviewed":
        return "Pending DVC Decision";
      case "dvc_approved":
        return "Approved - Ready for Processing";
      case "dvc_rejected":
        return "Rejected";
      default:
        return "Unknown Status";
    }
  };

  const getStatusIcon = (status: string) => {
    switch (status) {
      case "DRAFT":
        return <Clock className="w-4 h-4 text-yellow-500" />;
      case "submitted":
        return <Clock className="w-4 h-4 text-blue-500" />;
      case "hod_reviewed":
        return <Clock className="w-4 h-4 text-green-500" />;
      case "dean_reviewed":
        return <Clock className="w-4 h-4 text-purple-500" />;
      case "APPROVED":
        return <CheckCircle className="w-4 h-4 text-green-500" />;
      case "dvc_rejected":
        return <XCircle className="w-4 h-4 text-red-500" />;
      default:
        return <Clock className="w-4 h-4 text-gray-500" />;
    }
  };

  return (
    <div className="max-w-7xl mx-auto px-2 lg:px-0">
      {/* Header */}
      <div className="mb-8 flex justify-between items-center">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">HR Reports</h1>
          <p className="text-gray-600 mt-2">Generate and download HR reports</p>
        </div>
        <button
          onClick={handleDownloadPDF}
          className="flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
        >
          <Download className="w-5 h-5 mr-2" />
          Download PDF
        </button>
      </div>

      {/* Report Content */}
      <div
        ref={reportRef}
        className="bg-white rounded-xl shadow-sm border border-gray-200 p-6"
      >
        {/* Cover Page */}
        <div className="print-section flex flex-col items-center justify-center min-h-[80vh]">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">
            Promotion Applications Report
          </h1>
          <p className="text-xl text-gray-600 mb-8">
            {new Date().toLocaleDateString()}
          </p>
          <div className="bg-blue-100 p-6 rounded-full">
            <FileText className="w-16 h-16 text-blue-600" />
          </div>
          <p className="mt-8 text-gray-600">
            Generated by: {user?.fullName || "HR User"}
          </p>
        </div>

        {/* Summary Statistics */}
        <div className="print-section">
          <h2 className="text-2xl font-bold text-gray-900 mb-6 border-b pb-2">
            Summary Statistics
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <div className="border border-gray-200 rounded-xl p-6">
              <div className="flex items-center justify-between">
                <div>
                  <h3 className="text-lg font-semibold text-gray-900">
                    Ready for Processing
                  </h3>
                  <p className="text-gray-600 text-sm">Approved applications</p>
                </div>
                <div className="bg-blue-100 p-3 rounded-lg">
                  <Briefcase className="w-6 h-6 text-blue-600" />
                </div>
              </div>
              <div className="mt-4 text-2xl font-bold text-gray-900">
                {getPendingProcessing().length}
              </div>
            </div>

            <div className="border border-gray-200 rounded-xl p-6">
              <div className="flex items-center justify-between">
                <div>
                  <h3 className="text-lg font-semibold text-gray-900">
                    Total Approved
                  </h3>
                  <p className="text-gray-600 text-sm">This cycle</p>
                </div>
                <div className="bg-green-100 p-3 rounded-lg">
                  <CheckCircle className="w-6 h-6 text-green-600" />
                </div>
              </div>
              <div className="mt-4 text-2xl font-bold text-gray-900">
                {getApprovedApplications().length}
              </div>
            </div>

            <div className="border border-gray-200 rounded-xl p-6">
              <div className="flex items-center justify-between">
                <div>
                  <h3 className="text-lg font-semibold text-gray-900">
                    Total Applications
                  </h3>
                  <p className="text-gray-600 text-sm">University-wide</p>
                </div>
                <div className="bg-purple-100 p-3 rounded-lg">
                  <PieChart className="w-6 h-6 text-purple-600" />
                </div>
              </div>
              <div className="mt-4 text-2xl font-bold text-gray-900">
                {promotionRequests.length}
              </div>
            </div>
          </div>
        </div>

        {/* School Statistics */}
        <div className="print-section">
          <h2 className="text-2xl font-bold text-gray-900 mb-6 border-b pb-2">
            Applications by School
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-8">
            {Object.entries(schoolStats).map(([school, stats]) => (
              <div
                key={school}
                className="border border-gray-200 rounded-lg p-4"
              >
                <h3 className="font-medium text-gray-900 mb-2">{school}</h3>
                <div className="flex justify-between text-sm text-gray-600">
                  <span>Total: {stats.total}</span>
                  <span className="text-green-600">
                    Approved: {stats.approved}
                  </span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2 mt-2">
                  <div
                    className="bg-green-500 h-2 rounded-full"
                    style={{
                      width: `${(stats.approved / stats.total) * 100}%`,
                    }}
                  ></div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Pending Processing */}
        <div className="print-section">
          <h2 className="text-2xl font-bold text-gray-900 mb-6 border-b pb-2">
            Applications Ready for HR Processing
          </h2>
          {getPendingProcessing().length === 0 ? (
            <div className="text-center py-12">
              <CheckCircle className="w-12 h-12 text-gray-400 mx-auto mb-4" />
              <h3 className="text-lg font-medium text-gray-900 mb-2">
                No applications pending processing
              </h3>
              <p className="text-gray-600">
                All approved applications have been processed.
              </p>
            </div>
          ) : (
            <div className="overflow-x-auto">
              <table className="min-w-full divide-y divide-gray-200">
                <thead className="bg-gray-50">
                  <tr>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Applicant
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Promotion
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      School
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Status
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Approved Date
                    </th>
                  </tr>
                </thead>
                <tbody className="bg-white divide-y divide-gray-200">
                  {getPendingProcessing().map((app) => (
                    <tr key={app.id}>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <div className="flex items-center">
                          {getStatusIcon(app.status)}
                          <span className="ml-2 font-medium text-gray-900">
                            {app.applicantName}
                          </span>
                        </div>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-600">
                        {app.currentRank} → {app.appliedRank}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-600">
                        {app.schoolName}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <span className="px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800">
                          {getStatusText(app.status)}
                        </span>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-600">
                        {app.dvcDecisionDate
                          ? new Date(app.dvcDecisionDate).toLocaleDateString()
                          : "N/A"}
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          )}
        </div>

        {/* All Applications */}
        <div className="print-section">
          <h2 className="text-2xl font-bold text-gray-900 mb-6 border-b pb-2">
            All Applications
          </h2>
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Applicant
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Promotion
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    School
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Status
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Submitted
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {promotionRequests.map((app) => (
                  <tr key={app.id}>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center">
                        {getStatusIcon(app.status)}
                        <span className="ml-2 font-medium text-gray-900">
                          {app.applicantName}
                        </span>
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-600">
                      {app.currentRank} → {app.appliedRank}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-600">
                      {app.schoolName}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span
                        className={`px-2 py-1 text-xs font-medium rounded-full ${
                          app.status === "APPROVED"
                            ? "bg-green-100 text-green-800"
                            : app.status === "dvc_rejected"
                            ? "bg-red-100 text-red-800"
                            : "bg-blue-100 text-blue-800"
                        }`}
                      >
                        {getStatusText(app.status)}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-600">
                      {new Date(app.submissionDate).toLocaleDateString()}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        {/* Footer */}
        <div className="mt-12 pt-6 border-t border-gray-200 text-center text-sm text-gray-500 print-hidden">
          <p>Report generated on {new Date().toLocaleDateString()}</p>
          <p className="mt-2">Confidential - For HR use only</p>
        </div>
      </div>
    </div>
  );
}
